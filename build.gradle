/*
 * SPDX-License-Identifier: Apache-2.0
 * Copyright Contributors to the ODPi Egeria project.
 */

plugins {
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'idea'
}

repositories {
    mavenCentral()
}
group = 'org.odpi.egeria'
version = 1

ext {
    egeriaversion = '3.6'
    slf4jVersion = '1.7.36'
    jacksonVersion = '2.13.2'
    jupiterVersion = '5.8.2'
    httpclientVersion = '4.5.13'
}
dependencies {

    // Only used for build - already present in server chassis at runtime
    compileOnly "org.odpi.egeria:audit-log-framework:${egeriaversion}"
    compileOnly "org.odpi.egeria:data-manager-api:${egeriaversion}"
    // TODO: this is a dependency on an optional connector. validate, document as needed, consider packaging impact

    compileOnly "org.odpi.egeria:kafka-open-metadata-topic-connector:${egeriaversion}"
    compileOnly "org.odpi.egeria:open-connector-framework:${egeriaversion}"
    compileOnly "org.odpi.egeria:repository-services-apis:${egeriaversion}"
    compileOnly "org.odpi.egeria:repository-services:${egeriaversion}"
    compileOnly "org.odpi.egeria:topic-integrator-api:${egeriaversion}"

    // Needed for build and run
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "org.apache.httpcomponents:httpclient:${httpclientVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    // Only needed to compile test code
    testCompileOnly "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testImplementation "org.odpi.egeria:topic-integrator-api:${egeriaversion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"

    // TODO: Refactor above with custom configurations if cleaner
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    reports {
        html.required = true
    }
    filter {
        includeTestsMatching "*Test"
    }
}


// Maven Central (technically sonatype oss) requires we distribute source and javadoc
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}
// More Java language settings
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = "11"
    targetCompatibility = "11"
    options.incremental = true
    options.fork = true
    options.failOnError = true
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

shadowJar {
    archiveClassifier = 'jar-with-dependencies'
}

